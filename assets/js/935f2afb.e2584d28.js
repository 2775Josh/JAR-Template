"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"About","href":"/JAR-Template/","docId":"index"},{"type":"category","label":"Basic Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installing JAR Template","href":"/JAR-Template/basic-tutorials/installing-jar-template","docId":"basic-tutorials/installing-jar-template"},{"type":"link","label":"Basic Usage","href":"/JAR-Template/basic-tutorials/basic-usage","docId":"basic-tutorials/basic-usage"}],"href":"/JAR-Template/basic-tutorials/"},{"type":"category","label":"Advanced Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using Drive Member Variables","href":"/JAR-Template/advanced-tutorials/using-drive-member-variables","docId":"advanced-tutorials/using-drive-member-variables"}],"href":"/JAR-Template/advanced-tutorials/"},{"type":"category","label":"Docs","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Drive Class","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Drive Constructor","href":"/JAR-Template/docs/drive-class/drive-constructor","docId":"docs/drive-class/drive-constructor"},{"type":"link","label":"Motion Functions","href":"/JAR-Template/docs/drive-class/motion-functions","docId":"docs/drive-class/motion-functions"},{"type":"link","label":"General Functions","href":"/JAR-Template/docs/drive-class/general-functions","docId":"docs/drive-class/general-functions"}],"href":"/JAR-Template/docs/drive-class/"},{"type":"link","label":"Odometry Class","href":"/JAR-Template/docs/odometry-class","docId":"docs/odometry-class"},{"type":"link","label":"PID Class","href":"/JAR-Template/docs/PID-class","docId":"docs/PID-class"},{"type":"link","label":"Utility Functions","href":"/JAR-Template/docs/utility-functions","docId":"docs/utility-functions"}],"href":"/JAR-Template/docs/"}]},"docs":{"advanced-tutorials/advanced-tutorials":{"id":"advanced-tutorials/advanced-tutorials","title":"Advanced Tutorials","description":"The advanced tutorials assume a basic knowledge of object-oriented C++ and PID control.","sidebar":"tutorialSidebar"},"advanced-tutorials/using-drive-member-variables":{"id":"advanced-tutorials/using-drive-member-variables","title":"Using Drive Member Variables","description":"While coding, it is likely that you will wish to pass different drive constants to the chassis at different times in the run. Here, drive constants just refers to max voltage, kp, ki, kd, etc.","sidebar":"tutorialSidebar"},"basic-tutorials/basic-tutorials":{"id":"basic-tutorials/basic-tutorials","title":"Basic Tutorials","description":"The basic tutorials assume no prior knowledge of VexCode Pro V5, C++, or JAR Template.","sidebar":"tutorialSidebar"},"basic-tutorials/basic-usage":{"id":"basic-tutorials/basic-usage","title":"Basic Usage","description":"1. To make a new auton function, you must both write the function in autons.cpp and a declaration of the function in autons.h. The example autons show how this can be done.","sidebar":"tutorialSidebar"},"basic-tutorials/installing-jar-template":{"id":"basic-tutorials/installing-jar-template","title":"Installing JAR Template","description":"1. If you haven\'t already, download Vexcode Pro V5 and follow the Install Wizard\'s instructions to install.","sidebar":"tutorialSidebar"},"docs/docs":{"id":"docs/docs","title":"Docs","description":"The docs detail each function available for use in JAR Template. The documentation of each function comes with a prototype and an example. The prototype shows the name, inputs, and outputs to the function, and the examples show how the function can be used in the context of the surrounding code.","sidebar":"tutorialSidebar"},"docs/drive-class/drive-class":{"id":"docs/drive-class/drive-class","title":"Drive Class","description":"Since the drive class has a lot of functions, its documentation is split into general functions like setters and getters, and motion functions like `turntoangle()` and `drivetopoint()`. The drive constructor also gets its own category since there are ten drive setups.","sidebar":"tutorialSidebar"},"docs/drive-class/drive-constructor":{"id":"docs/drive-class/drive-constructor","title":"Drive Constructor","description":"The JAR Template drive constructor can build drivetrains with no tracking wheels, but also supports tank and holonomic odometry, with either red optical encoders or V5 rotation sensors. Note that each constructor has the same prototype, and that every drive style requires a V5 inertial sensor.","sidebar":"tutorialSidebar"},"docs/drive-class/general-functions":{"id":"docs/drive-class/general-functions","title":"General Functions","description":"JAR Template provides a quick setup for arcade and tank control for tank drive robots, and holonomic control for holonomic robots. This setup is a quick way to check that each drive port is reversed properly and that the robot drives well.","sidebar":"tutorialSidebar"},"docs/drive-class/motion-functions":{"id":"docs/drive-class/motion-functions","title":"Motion Functions","description":"JAR Template provides a multitude of ways to control the chassis using PID and odometry.","sidebar":"tutorialSidebar"},"docs/odometry-class":{"id":"docs/odometry-class","title":"Odometry Class","description":"General-use odometry class with Xposition, Yposition, and orientation_deg being the relevant outputs. This works for one-tracker and two-tracker systems, and requires a gyro to get input angle.","sidebar":"tutorialSidebar"},"docs/PID-class":{"id":"docs/PID-class","title":"PID Class","description":"The JAR Template drive constructor can build drivetrains with no tracking wheels, but also supports tank and holonomic odometry, with either red optical encoders or V5 rotation sensors. Note that each constructor has the same prototype, and that every drive style requires a V5 inertial sensor.","sidebar":"tutorialSidebar"},"docs/utility-functions":{"id":"docs/utility-functions","title":"Utility Functions","description":"The JAR Template drive constructor can build drivetrains with no tracking wheels, but also supports tank and holonomic odometry, with either red optical encoders or V5 rotation sensors. Note that each constructor has the same prototype, and that every drive style requires a V5 inertial sensor.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"About JAR Template","description":"JAR Template is a simple and powerful library for Vexcode Pro V5 and the VEX VS Code Extension.","sidebar":"tutorialSidebar"}}}')}}]);