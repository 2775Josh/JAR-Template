"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[487],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,y=p["".concat(l,".").concat(g)]||p[g]||d[g]||i;return n?a.createElement(y,o(o({ref:t},u),{},{components:n})):a.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(8168),r=(n(6540),n(5680));const i={sidebar_position:2,sidebar_label:"Writing Autons"},o="Writing Autons",s={unversionedId:"basic-tutorials/writing-autons",id:"basic-tutorials/writing-autons",title:"Writing Autons",description:"1. Go to `\\include\\autons.h` and add your auton using the format `void myfirstauton();`. This is called the function declaration.",source:"@site/docs/basic-tutorials/writing-autons.md",sourceDirName:"basic-tutorials",slug:"/basic-tutorials/writing-autons",permalink:"/JAR-Template/basic-tutorials/writing-autons",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Writing Autons"},sidebar:"tutorialSidebar",previous:{title:"Setting Up JAR Template",permalink:"/JAR-Template/basic-tutorials/setting-up-jar-template"},next:{title:"Advanced Tutorials",permalink:"/JAR-Template/advanced-tutorials/"}},l={},c=[],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"writing-autons"},"Writing Autons"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Go to ",(0,r.yg)("inlineCode",{parentName:"li"},"\\include\\autons.h")," and add your auton using the format ",(0,r.yg)("inlineCode",{parentName:"li"},"void my_first_auton();"),". This is called the function declaration."),(0,r.yg)("li",{parentName:"ol"},"Go to ",(0,r.yg)("inlineCode",{parentName:"li"},"\\src\\autons.cpp")," and add your auton using the following format:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"void my_first_auton(){\n\n}\n")),(0,r.yg)("p",null,"Your code will go within the brackets. For example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"void my_first_auton(){\n    chassis.drive_distance(12);\n    chassis.turn_to_angle(90);\n    chassis.drive_distance(12);\n    chassis.drive_distance(-12);\n    chassis.turn_to_angle(0);\n    chassis.drive_distance(-12);\n}\n")),(0,r.yg)("p",null,"This code should drive in an L shape and return to its start along the same path, and this segment of code is the function's definition."),(0,r.yg)("ol",{start:3},(0,r.yg)("li",{parentName:"ol"},"Go to ",(0,r.yg)("inlineCode",{parentName:"li"},"\\src\\main.cpp")," and scroll to the ",(0,r.yg)("inlineCode",{parentName:"li"},"void pre_auton()")," function. Pick a case (in this example we'll pick 0) and change the name of the auton displayed on the brain screen in auton selection. The code will look like")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'case 0:\n    Brain.Screen.printAt(5, 140, "My First Auton");\n    break;\n')),(0,r.yg)("ol",{start:4},(0,r.yg)("li",{parentName:"ol"},"In ",(0,r.yg)("inlineCode",{parentName:"li"},"\\src\\main.cpp"),", scroll to the ",(0,r.yg)("inlineCode",{parentName:"li"},"void autonomous()")," function. Using the same case you picked in step 3, change the auton function called within that case. The code will look like")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"case 0:\n    my_first_auton();\n    break;\n")),(0,r.yg)("ol",{start:5},(0,r.yg)("li",{parentName:"ol"},"Test your auton. If you chose case 0, this is the default auton and you don't have to select the correct auton from the brain screen. For other cases, you'll need to tap on the brain screen in pre auton until you reach the desired auton.")))}d.isMDXComponent=!0}}]);